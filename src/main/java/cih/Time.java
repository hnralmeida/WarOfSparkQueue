/*
 * Projeto de Programação Orientada a Objetos
 * AUTOR: Henrique Almeida de Oliveira
 */
package cih;

import cdp.*;
import cdp.Player;
import cgt.App;
import java.awt.Color;
import static java.awt.Component.CENTER_ALIGNMENT;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.Frame;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import static javax.swing.WindowConstants.EXIT_ON_CLOSE;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author almei
 */
public class Time extends javax.swing.JDialog {

    private final Toolkit tk = Toolkit.getDefaultToolkit();
    private final Dimension screenSize = tk.getScreenSize();
    private final App gerenteUI;
    private Team team = null;

    public Team getTeam() {
        return team;
    }

    public void setTeam(Team team) {
        this.team = team;
    }

    /**
     * Creates new form Loja
     *
     * @param parent
     * @param modal
     * @param gerenteUI
     */
    public Time(java.awt.Frame parent, boolean modal, App gerenteUI) {
        super(parent, modal);
        this.gerenteUI = gerenteUI;
        initComponents();
    }

    public void checkScreen() {
        this.setSize(screenSize);

        JLabel label = new JLabel(gerenteUI.PathImageGetter("app-bg-no"));
        label.setBounds(0, 0, this.getWidth(), this.getHeight());
        this.getContentPane().add(label);

        jLabelBack.setIcon(gerenteUI.PathImageGetter("app-back-50"));
        jLabelBack.setCursor(new Cursor(Cursor.HAND_CURSOR));
        jLabelTitle.setVerticalAlignment((int) CENTER_ALIGNMENT);
        jLabelValor.setBackground(Color.CYAN);

        Color transp = new Color(200, 200, 200, 1);
        Topbar.setBackground(transp);
        jTablePJ.sizeColumnsToFit(EXIT_ON_CLOSE);

        try {
            Player p = gerenteUI.getPlayer();
            jLabelValor.setText(p.getCurrency() + " PO");
            loadTeam(p);
        } catch (ClassNotFoundException | SQLException error) {
            System.out.println(error.getCause());
        }
        this.dispose();
    }

    private void loadTeam(Player p) throws ClassNotFoundException, SQLException {

        List<Creature> lista;

        ((DefaultTableModel) jTablePJ.getModel()).setNumRows(0);
        Team time = gerenteUI.getGerDominio().findTeam(p.getId()).get(0);

        try {
            lista = time.getTeamA();
            Action remove = new AbstractAction() {

                public void reload(Player p) throws ClassNotFoundException, SQLException {
                    loadTeam(p);
                    repaint();
                }

                @Override
                public void actionPerformed(ActionEvent e) {
                    try {
                        int index = Integer.parseInt(e.getActionCommand());
                        Creature c = lista.get(index);
                        gerenteUI.getGerDominio().removeCreature(c);
                        this.reload(p);

                        System.out.println("Removeu " + c.getName());

                        int newCurrency = p.getCurrency() + 75;
                        p.setCurrency(newCurrency);
                        gerenteUI.getGerDominio().updatePlayer(p);
                        jLabelValor.setText(p.getCurrency() + " PO");
                    } catch (ClassNotFoundException | SQLException ex) {
                        Logger.getLogger(Time.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            };

            ButtonColumn buttonColumn = new ButtonColumn(jTablePJ, remove, 4);
            buttonColumn.setMnemonic(KeyEvent.VK_D);

            for (Creature camp : lista) {
                System.out.println(camp);
                List<Object> line = new ArrayList<>(Arrays.asList(camp.toArray()));
                line.add(75 + " PO");

                ((DefaultTableModel) jTablePJ.getModel()).addRow(line.toArray());
                System.out.println(line);
            }

        } catch (NullPointerException | ParseException ex) {
            Logger.getLogger(Campanha.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Topbar = new javax.swing.JPanel();
        jLabelTitle = new javax.swing.JLabel();
        jLabelBack = new javax.swing.JLabel();
        jLabelValor = new javax.swing.JLabel();
        jPanelCCQueue = new javax.swing.JPanel();
        jLabelPrimeiroDaFila = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        JPanelPJ = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablePJ = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabelTitle.setFont(new java.awt.Font("Segoe UI Light", 0, 36)); // NOI18N
        jLabelTitle.setText("Gerenciar Time");

        jLabelBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelBackMouseClicked(evt);
            }
        });

        jLabelValor.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabelValor.setText("jLabel2");

        javax.swing.GroupLayout TopbarLayout = new javax.swing.GroupLayout(Topbar);
        Topbar.setLayout(TopbarLayout);
        TopbarLayout.setHorizontalGroup(
            TopbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TopbarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelBack, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabelTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 389, Short.MAX_VALUE)
                .addComponent(jLabelValor, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );
        TopbarLayout.setVerticalGroup(
            TopbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TopbarLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(TopbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabelBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TopbarLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelValor)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabelPrimeiroDaFila.setText("jLabelNomeDeCria");

        jLabel1.setText("image");

        javax.swing.GroupLayout jPanelCCQueueLayout = new javax.swing.GroupLayout(jPanelCCQueue);
        jPanelCCQueue.setLayout(jPanelCCQueueLayout);
        jPanelCCQueueLayout.setHorizontalGroup(
            jPanelCCQueueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCCQueueLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelPrimeiroDaFila)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelCCQueueLayout.setVerticalGroup(
            jPanelCCQueueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCCQueueLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelCCQueueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)
                    .addGroup(jPanelCCQueueLayout.createSequentialGroup()
                        .addComponent(jLabelPrimeiroDaFila)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        JPanelPJ.setMaximumSize(new java.awt.Dimension(320, 320));
        JPanelPJ.setMinimumSize(new java.awt.Dimension(320, 320));
        JPanelPJ.setPreferredSize(new java.awt.Dimension(320, 320));

        jTablePJ.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "Peso", "Idade", "Tipo", "Remover"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTablePJ.setMaximumSize(new java.awt.Dimension(300, 80));
        jScrollPane1.setViewportView(jTablePJ);

        javax.swing.GroupLayout JPanelPJLayout = new javax.swing.GroupLayout(JPanelPJ);
        JPanelPJ.setLayout(JPanelPJLayout);
        JPanelPJLayout.setHorizontalGroup(
            JPanelPJLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPanelPJLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 942, Short.MAX_VALUE)
                .addContainerGap())
        );
        JPanelPJLayout.setVerticalGroup(
            JPanelPJLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JPanelPJLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Topbar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanelCCQueue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(JPanelPJ, javax.swing.GroupLayout.DEFAULT_SIZE, 954, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(Topbar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelCCQueue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(JPanelPJ, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabelBackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelBackMouseClicked
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_jLabelBackMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel JPanelPJ;
    private javax.swing.JPanel Topbar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelBack;
    private javax.swing.JLabel jLabelPrimeiroDaFila;
    private javax.swing.JLabel jLabelTitle;
    private javax.swing.JLabel jLabelValor;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelCCQueue;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTablePJ;
    // End of variables declaration//GEN-END:variables
}
